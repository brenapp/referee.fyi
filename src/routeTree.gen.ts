/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as IndexImport } from './routes/index'
import { Route as SkuIndexImport } from './routes/$sku/index'
import { Route as SkuSummaryImport } from './routes/$sku/summary'
import { Route as SkuSkillsImport } from './routes/$sku/skills'
import { Route as SkuDivisionImport } from './routes/$sku/division'
import { Route as SkuDevtoolsImport } from './routes/$sku/devtools'
import { Route as SkuDeletedImport } from './routes/$sku/deleted'
import { Route as SkuTeamImport } from './routes/$sku/$team'
import { Route as SkuDivisionIndexImport } from './routes/$sku/$division/index'
import { Route as SkuDivisionTeamsImport } from './routes/$sku/$division/teams'
import { Route as SkuDivisionMatchesImport } from './routes/$sku/$division/matches'
import { Route as SkuDivisionManageImport } from './routes/$sku/$division/manage'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyRoute = PrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SkuIndexRoute = SkuIndexImport.update({
  id: '/$sku/',
  path: '/$sku/',
  getParentRoute: () => rootRoute,
} as any)

const SkuSummaryRoute = SkuSummaryImport.update({
  id: '/$sku/summary',
  path: '/$sku/summary',
  getParentRoute: () => rootRoute,
} as any)

const SkuSkillsRoute = SkuSkillsImport.update({
  id: '/$sku/skills',
  path: '/$sku/skills',
  getParentRoute: () => rootRoute,
} as any)

const SkuDivisionRoute = SkuDivisionImport.update({
  id: '/$sku/division',
  path: '/$sku/division',
  getParentRoute: () => rootRoute,
} as any)

const SkuDevtoolsRoute = SkuDevtoolsImport.update({
  id: '/$sku/devtools',
  path: '/$sku/devtools',
  getParentRoute: () => rootRoute,
} as any)

const SkuDeletedRoute = SkuDeletedImport.update({
  id: '/$sku/deleted',
  path: '/$sku/deleted',
  getParentRoute: () => rootRoute,
} as any)

const SkuTeamRoute = SkuTeamImport.update({
  id: '/$sku/$team',
  path: '/$sku/$team',
  getParentRoute: () => rootRoute,
} as any)

const SkuDivisionIndexRoute = SkuDivisionIndexImport.update({
  id: '/$sku/$division/',
  path: '/$sku/$division/',
  getParentRoute: () => rootRoute,
} as any)

const SkuDivisionTeamsRoute = SkuDivisionTeamsImport.update({
  id: '/$sku/$division/teams',
  path: '/$sku/$division/teams',
  getParentRoute: () => rootRoute,
} as any)

const SkuDivisionMatchesRoute = SkuDivisionMatchesImport.update({
  id: '/$sku/$division/matches',
  path: '/$sku/$division/matches',
  getParentRoute: () => rootRoute,
} as any)

const SkuDivisionManageRoute = SkuDivisionManageImport.update({
  id: '/$sku/$division/manage',
  path: '/$sku/$division/manage',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/$sku/$team': {
      id: '/$sku/$team'
      path: '/$sku/$team'
      fullPath: '/$sku/$team'
      preLoaderRoute: typeof SkuTeamImport
      parentRoute: typeof rootRoute
    }
    '/$sku/deleted': {
      id: '/$sku/deleted'
      path: '/$sku/deleted'
      fullPath: '/$sku/deleted'
      preLoaderRoute: typeof SkuDeletedImport
      parentRoute: typeof rootRoute
    }
    '/$sku/devtools': {
      id: '/$sku/devtools'
      path: '/$sku/devtools'
      fullPath: '/$sku/devtools'
      preLoaderRoute: typeof SkuDevtoolsImport
      parentRoute: typeof rootRoute
    }
    '/$sku/division': {
      id: '/$sku/division'
      path: '/$sku/division'
      fullPath: '/$sku/division'
      preLoaderRoute: typeof SkuDivisionImport
      parentRoute: typeof rootRoute
    }
    '/$sku/skills': {
      id: '/$sku/skills'
      path: '/$sku/skills'
      fullPath: '/$sku/skills'
      preLoaderRoute: typeof SkuSkillsImport
      parentRoute: typeof rootRoute
    }
    '/$sku/summary': {
      id: '/$sku/summary'
      path: '/$sku/summary'
      fullPath: '/$sku/summary'
      preLoaderRoute: typeof SkuSummaryImport
      parentRoute: typeof rootRoute
    }
    '/$sku/': {
      id: '/$sku/'
      path: '/$sku'
      fullPath: '/$sku'
      preLoaderRoute: typeof SkuIndexImport
      parentRoute: typeof rootRoute
    }
    '/$sku/$division/manage': {
      id: '/$sku/$division/manage'
      path: '/$sku/$division/manage'
      fullPath: '/$sku/$division/manage'
      preLoaderRoute: typeof SkuDivisionManageImport
      parentRoute: typeof rootRoute
    }
    '/$sku/$division/matches': {
      id: '/$sku/$division/matches'
      path: '/$sku/$division/matches'
      fullPath: '/$sku/$division/matches'
      preLoaderRoute: typeof SkuDivisionMatchesImport
      parentRoute: typeof rootRoute
    }
    '/$sku/$division/teams': {
      id: '/$sku/$division/teams'
      path: '/$sku/$division/teams'
      fullPath: '/$sku/$division/teams'
      preLoaderRoute: typeof SkuDivisionTeamsImport
      parentRoute: typeof rootRoute
    }
    '/$sku/$division/': {
      id: '/$sku/$division/'
      path: '/$sku/$division'
      fullPath: '/$sku/$division'
      preLoaderRoute: typeof SkuDivisionIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/privacy': typeof PrivacyRoute
  '/settings': typeof SettingsRoute
  '/$sku/$team': typeof SkuTeamRoute
  '/$sku/deleted': typeof SkuDeletedRoute
  '/$sku/devtools': typeof SkuDevtoolsRoute
  '/$sku/division': typeof SkuDivisionRoute
  '/$sku/skills': typeof SkuSkillsRoute
  '/$sku/summary': typeof SkuSummaryRoute
  '/$sku': typeof SkuIndexRoute
  '/$sku/$division/manage': typeof SkuDivisionManageRoute
  '/$sku/$division/matches': typeof SkuDivisionMatchesRoute
  '/$sku/$division/teams': typeof SkuDivisionTeamsRoute
  '/$sku/$division': typeof SkuDivisionIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/privacy': typeof PrivacyRoute
  '/settings': typeof SettingsRoute
  '/$sku/$team': typeof SkuTeamRoute
  '/$sku/deleted': typeof SkuDeletedRoute
  '/$sku/devtools': typeof SkuDevtoolsRoute
  '/$sku/division': typeof SkuDivisionRoute
  '/$sku/skills': typeof SkuSkillsRoute
  '/$sku/summary': typeof SkuSummaryRoute
  '/$sku': typeof SkuIndexRoute
  '/$sku/$division/manage': typeof SkuDivisionManageRoute
  '/$sku/$division/matches': typeof SkuDivisionMatchesRoute
  '/$sku/$division/teams': typeof SkuDivisionTeamsRoute
  '/$sku/$division': typeof SkuDivisionIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/privacy': typeof PrivacyRoute
  '/settings': typeof SettingsRoute
  '/$sku/$team': typeof SkuTeamRoute
  '/$sku/deleted': typeof SkuDeletedRoute
  '/$sku/devtools': typeof SkuDevtoolsRoute
  '/$sku/division': typeof SkuDivisionRoute
  '/$sku/skills': typeof SkuSkillsRoute
  '/$sku/summary': typeof SkuSummaryRoute
  '/$sku/': typeof SkuIndexRoute
  '/$sku/$division/manage': typeof SkuDivisionManageRoute
  '/$sku/$division/matches': typeof SkuDivisionMatchesRoute
  '/$sku/$division/teams': typeof SkuDivisionTeamsRoute
  '/$sku/$division/': typeof SkuDivisionIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/privacy'
    | '/settings'
    | '/$sku/$team'
    | '/$sku/deleted'
    | '/$sku/devtools'
    | '/$sku/division'
    | '/$sku/skills'
    | '/$sku/summary'
    | '/$sku'
    | '/$sku/$division/manage'
    | '/$sku/$division/matches'
    | '/$sku/$division/teams'
    | '/$sku/$division'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/privacy'
    | '/settings'
    | '/$sku/$team'
    | '/$sku/deleted'
    | '/$sku/devtools'
    | '/$sku/division'
    | '/$sku/skills'
    | '/$sku/summary'
    | '/$sku'
    | '/$sku/$division/manage'
    | '/$sku/$division/matches'
    | '/$sku/$division/teams'
    | '/$sku/$division'
  id:
    | '__root__'
    | '/'
    | '/privacy'
    | '/settings'
    | '/$sku/$team'
    | '/$sku/deleted'
    | '/$sku/devtools'
    | '/$sku/division'
    | '/$sku/skills'
    | '/$sku/summary'
    | '/$sku/'
    | '/$sku/$division/manage'
    | '/$sku/$division/matches'
    | '/$sku/$division/teams'
    | '/$sku/$division/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PrivacyRoute: typeof PrivacyRoute
  SettingsRoute: typeof SettingsRoute
  SkuTeamRoute: typeof SkuTeamRoute
  SkuDeletedRoute: typeof SkuDeletedRoute
  SkuDevtoolsRoute: typeof SkuDevtoolsRoute
  SkuDivisionRoute: typeof SkuDivisionRoute
  SkuSkillsRoute: typeof SkuSkillsRoute
  SkuSummaryRoute: typeof SkuSummaryRoute
  SkuIndexRoute: typeof SkuIndexRoute
  SkuDivisionManageRoute: typeof SkuDivisionManageRoute
  SkuDivisionMatchesRoute: typeof SkuDivisionMatchesRoute
  SkuDivisionTeamsRoute: typeof SkuDivisionTeamsRoute
  SkuDivisionIndexRoute: typeof SkuDivisionIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PrivacyRoute: PrivacyRoute,
  SettingsRoute: SettingsRoute,
  SkuTeamRoute: SkuTeamRoute,
  SkuDeletedRoute: SkuDeletedRoute,
  SkuDevtoolsRoute: SkuDevtoolsRoute,
  SkuDivisionRoute: SkuDivisionRoute,
  SkuSkillsRoute: SkuSkillsRoute,
  SkuSummaryRoute: SkuSummaryRoute,
  SkuIndexRoute: SkuIndexRoute,
  SkuDivisionManageRoute: SkuDivisionManageRoute,
  SkuDivisionMatchesRoute: SkuDivisionMatchesRoute,
  SkuDivisionTeamsRoute: SkuDivisionTeamsRoute,
  SkuDivisionIndexRoute: SkuDivisionIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/privacy",
        "/settings",
        "/$sku/$team",
        "/$sku/deleted",
        "/$sku/devtools",
        "/$sku/division",
        "/$sku/skills",
        "/$sku/summary",
        "/$sku/",
        "/$sku/$division/manage",
        "/$sku/$division/matches",
        "/$sku/$division/teams",
        "/$sku/$division/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/privacy": {
      "filePath": "privacy.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/$sku/$team": {
      "filePath": "$sku/$team.tsx"
    },
    "/$sku/deleted": {
      "filePath": "$sku/deleted.tsx"
    },
    "/$sku/devtools": {
      "filePath": "$sku/devtools.tsx"
    },
    "/$sku/division": {
      "filePath": "$sku/division.tsx"
    },
    "/$sku/skills": {
      "filePath": "$sku/skills.tsx"
    },
    "/$sku/summary": {
      "filePath": "$sku/summary.tsx"
    },
    "/$sku/": {
      "filePath": "$sku/index.tsx"
    },
    "/$sku/$division/manage": {
      "filePath": "$sku/$division/manage.tsx"
    },
    "/$sku/$division/matches": {
      "filePath": "$sku/$division/matches.tsx"
    },
    "/$sku/$division/teams": {
      "filePath": "$sku/$division/teams.tsx"
    },
    "/$sku/$division/": {
      "filePath": "$sku/$division/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
