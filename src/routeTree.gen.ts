/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as IndexImport } from './routes/index'
import { Route as EventsIndexImport } from './routes/events/index'
import { Route as EventsTeamImport } from './routes/events/team'
import { Route as EventsSummaryImport } from './routes/events/summary'
import { Route as EventsSkillsImport } from './routes/events/skills'
import { Route as EventsDivisionImport } from './routes/events/division'
import { Route as EventsDevtoolsImport } from './routes/events/devtools'
import { Route as EventsDeletedImport } from './routes/events/deleted'
import { Route as EventsHomeIndexImport } from './routes/events/home/index'
import { Route as EventsHomeTeamsImport } from './routes/events/home/teams'
import { Route as EventsHomeMatchesImport } from './routes/events/home/matches'
import { Route as EventsHomeManageImport } from './routes/events/home/manage'
import { Route as EventsDialogsTeamImport } from './routes/events/dialogs/team'
import { Route as EventsDialogsNewImport } from './routes/events/dialogs/new'
import { Route as EventsDialogsMatchImport } from './routes/events/dialogs/match'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyRoute = PrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EventsIndexRoute = EventsIndexImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => rootRoute,
} as any)

const EventsTeamRoute = EventsTeamImport.update({
  id: '/events/team',
  path: '/events/team',
  getParentRoute: () => rootRoute,
} as any)

const EventsSummaryRoute = EventsSummaryImport.update({
  id: '/events/summary',
  path: '/events/summary',
  getParentRoute: () => rootRoute,
} as any)

const EventsSkillsRoute = EventsSkillsImport.update({
  id: '/events/skills',
  path: '/events/skills',
  getParentRoute: () => rootRoute,
} as any)

const EventsDivisionRoute = EventsDivisionImport.update({
  id: '/events/division',
  path: '/events/division',
  getParentRoute: () => rootRoute,
} as any)

const EventsDevtoolsRoute = EventsDevtoolsImport.update({
  id: '/events/devtools',
  path: '/events/devtools',
  getParentRoute: () => rootRoute,
} as any)

const EventsDeletedRoute = EventsDeletedImport.update({
  id: '/events/deleted',
  path: '/events/deleted',
  getParentRoute: () => rootRoute,
} as any)

const EventsHomeIndexRoute = EventsHomeIndexImport.update({
  id: '/events/home/',
  path: '/events/home/',
  getParentRoute: () => rootRoute,
} as any)

const EventsHomeTeamsRoute = EventsHomeTeamsImport.update({
  id: '/events/home/teams',
  path: '/events/home/teams',
  getParentRoute: () => rootRoute,
} as any)

const EventsHomeMatchesRoute = EventsHomeMatchesImport.update({
  id: '/events/home/matches',
  path: '/events/home/matches',
  getParentRoute: () => rootRoute,
} as any)

const EventsHomeManageRoute = EventsHomeManageImport.update({
  id: '/events/home/manage',
  path: '/events/home/manage',
  getParentRoute: () => rootRoute,
} as any)

const EventsDialogsTeamRoute = EventsDialogsTeamImport.update({
  id: '/events/dialogs/team',
  path: '/events/dialogs/team',
  getParentRoute: () => rootRoute,
} as any)

const EventsDialogsNewRoute = EventsDialogsNewImport.update({
  id: '/events/dialogs/new',
  path: '/events/dialogs/new',
  getParentRoute: () => rootRoute,
} as any)

const EventsDialogsMatchRoute = EventsDialogsMatchImport.update({
  id: '/events/dialogs/match',
  path: '/events/dialogs/match',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/events/deleted': {
      id: '/events/deleted'
      path: '/events/deleted'
      fullPath: '/events/deleted'
      preLoaderRoute: typeof EventsDeletedImport
      parentRoute: typeof rootRoute
    }
    '/events/devtools': {
      id: '/events/devtools'
      path: '/events/devtools'
      fullPath: '/events/devtools'
      preLoaderRoute: typeof EventsDevtoolsImport
      parentRoute: typeof rootRoute
    }
    '/events/division': {
      id: '/events/division'
      path: '/events/division'
      fullPath: '/events/division'
      preLoaderRoute: typeof EventsDivisionImport
      parentRoute: typeof rootRoute
    }
    '/events/skills': {
      id: '/events/skills'
      path: '/events/skills'
      fullPath: '/events/skills'
      preLoaderRoute: typeof EventsSkillsImport
      parentRoute: typeof rootRoute
    }
    '/events/summary': {
      id: '/events/summary'
      path: '/events/summary'
      fullPath: '/events/summary'
      preLoaderRoute: typeof EventsSummaryImport
      parentRoute: typeof rootRoute
    }
    '/events/team': {
      id: '/events/team'
      path: '/events/team'
      fullPath: '/events/team'
      preLoaderRoute: typeof EventsTeamImport
      parentRoute: typeof rootRoute
    }
    '/events/': {
      id: '/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/dialogs/match': {
      id: '/events/dialogs/match'
      path: '/events/dialogs/match'
      fullPath: '/events/dialogs/match'
      preLoaderRoute: typeof EventsDialogsMatchImport
      parentRoute: typeof rootRoute
    }
    '/events/dialogs/new': {
      id: '/events/dialogs/new'
      path: '/events/dialogs/new'
      fullPath: '/events/dialogs/new'
      preLoaderRoute: typeof EventsDialogsNewImport
      parentRoute: typeof rootRoute
    }
    '/events/dialogs/team': {
      id: '/events/dialogs/team'
      path: '/events/dialogs/team'
      fullPath: '/events/dialogs/team'
      preLoaderRoute: typeof EventsDialogsTeamImport
      parentRoute: typeof rootRoute
    }
    '/events/home/manage': {
      id: '/events/home/manage'
      path: '/events/home/manage'
      fullPath: '/events/home/manage'
      preLoaderRoute: typeof EventsHomeManageImport
      parentRoute: typeof rootRoute
    }
    '/events/home/matches': {
      id: '/events/home/matches'
      path: '/events/home/matches'
      fullPath: '/events/home/matches'
      preLoaderRoute: typeof EventsHomeMatchesImport
      parentRoute: typeof rootRoute
    }
    '/events/home/teams': {
      id: '/events/home/teams'
      path: '/events/home/teams'
      fullPath: '/events/home/teams'
      preLoaderRoute: typeof EventsHomeTeamsImport
      parentRoute: typeof rootRoute
    }
    '/events/home/': {
      id: '/events/home/'
      path: '/events/home'
      fullPath: '/events/home'
      preLoaderRoute: typeof EventsHomeIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/privacy': typeof PrivacyRoute
  '/settings': typeof SettingsRoute
  '/events/deleted': typeof EventsDeletedRoute
  '/events/devtools': typeof EventsDevtoolsRoute
  '/events/division': typeof EventsDivisionRoute
  '/events/skills': typeof EventsSkillsRoute
  '/events/summary': typeof EventsSummaryRoute
  '/events/team': typeof EventsTeamRoute
  '/events': typeof EventsIndexRoute
  '/events/dialogs/match': typeof EventsDialogsMatchRoute
  '/events/dialogs/new': typeof EventsDialogsNewRoute
  '/events/dialogs/team': typeof EventsDialogsTeamRoute
  '/events/home/manage': typeof EventsHomeManageRoute
  '/events/home/matches': typeof EventsHomeMatchesRoute
  '/events/home/teams': typeof EventsHomeTeamsRoute
  '/events/home': typeof EventsHomeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/privacy': typeof PrivacyRoute
  '/settings': typeof SettingsRoute
  '/events/deleted': typeof EventsDeletedRoute
  '/events/devtools': typeof EventsDevtoolsRoute
  '/events/division': typeof EventsDivisionRoute
  '/events/skills': typeof EventsSkillsRoute
  '/events/summary': typeof EventsSummaryRoute
  '/events/team': typeof EventsTeamRoute
  '/events': typeof EventsIndexRoute
  '/events/dialogs/match': typeof EventsDialogsMatchRoute
  '/events/dialogs/new': typeof EventsDialogsNewRoute
  '/events/dialogs/team': typeof EventsDialogsTeamRoute
  '/events/home/manage': typeof EventsHomeManageRoute
  '/events/home/matches': typeof EventsHomeMatchesRoute
  '/events/home/teams': typeof EventsHomeTeamsRoute
  '/events/home': typeof EventsHomeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/privacy': typeof PrivacyRoute
  '/settings': typeof SettingsRoute
  '/events/deleted': typeof EventsDeletedRoute
  '/events/devtools': typeof EventsDevtoolsRoute
  '/events/division': typeof EventsDivisionRoute
  '/events/skills': typeof EventsSkillsRoute
  '/events/summary': typeof EventsSummaryRoute
  '/events/team': typeof EventsTeamRoute
  '/events/': typeof EventsIndexRoute
  '/events/dialogs/match': typeof EventsDialogsMatchRoute
  '/events/dialogs/new': typeof EventsDialogsNewRoute
  '/events/dialogs/team': typeof EventsDialogsTeamRoute
  '/events/home/manage': typeof EventsHomeManageRoute
  '/events/home/matches': typeof EventsHomeMatchesRoute
  '/events/home/teams': typeof EventsHomeTeamsRoute
  '/events/home/': typeof EventsHomeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/privacy'
    | '/settings'
    | '/events/deleted'
    | '/events/devtools'
    | '/events/division'
    | '/events/skills'
    | '/events/summary'
    | '/events/team'
    | '/events'
    | '/events/dialogs/match'
    | '/events/dialogs/new'
    | '/events/dialogs/team'
    | '/events/home/manage'
    | '/events/home/matches'
    | '/events/home/teams'
    | '/events/home'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/privacy'
    | '/settings'
    | '/events/deleted'
    | '/events/devtools'
    | '/events/division'
    | '/events/skills'
    | '/events/summary'
    | '/events/team'
    | '/events'
    | '/events/dialogs/match'
    | '/events/dialogs/new'
    | '/events/dialogs/team'
    | '/events/home/manage'
    | '/events/home/matches'
    | '/events/home/teams'
    | '/events/home'
  id:
    | '__root__'
    | '/'
    | '/privacy'
    | '/settings'
    | '/events/deleted'
    | '/events/devtools'
    | '/events/division'
    | '/events/skills'
    | '/events/summary'
    | '/events/team'
    | '/events/'
    | '/events/dialogs/match'
    | '/events/dialogs/new'
    | '/events/dialogs/team'
    | '/events/home/manage'
    | '/events/home/matches'
    | '/events/home/teams'
    | '/events/home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PrivacyRoute: typeof PrivacyRoute
  SettingsRoute: typeof SettingsRoute
  EventsDeletedRoute: typeof EventsDeletedRoute
  EventsDevtoolsRoute: typeof EventsDevtoolsRoute
  EventsDivisionRoute: typeof EventsDivisionRoute
  EventsSkillsRoute: typeof EventsSkillsRoute
  EventsSummaryRoute: typeof EventsSummaryRoute
  EventsTeamRoute: typeof EventsTeamRoute
  EventsIndexRoute: typeof EventsIndexRoute
  EventsDialogsMatchRoute: typeof EventsDialogsMatchRoute
  EventsDialogsNewRoute: typeof EventsDialogsNewRoute
  EventsDialogsTeamRoute: typeof EventsDialogsTeamRoute
  EventsHomeManageRoute: typeof EventsHomeManageRoute
  EventsHomeMatchesRoute: typeof EventsHomeMatchesRoute
  EventsHomeTeamsRoute: typeof EventsHomeTeamsRoute
  EventsHomeIndexRoute: typeof EventsHomeIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PrivacyRoute: PrivacyRoute,
  SettingsRoute: SettingsRoute,
  EventsDeletedRoute: EventsDeletedRoute,
  EventsDevtoolsRoute: EventsDevtoolsRoute,
  EventsDivisionRoute: EventsDivisionRoute,
  EventsSkillsRoute: EventsSkillsRoute,
  EventsSummaryRoute: EventsSummaryRoute,
  EventsTeamRoute: EventsTeamRoute,
  EventsIndexRoute: EventsIndexRoute,
  EventsDialogsMatchRoute: EventsDialogsMatchRoute,
  EventsDialogsNewRoute: EventsDialogsNewRoute,
  EventsDialogsTeamRoute: EventsDialogsTeamRoute,
  EventsHomeManageRoute: EventsHomeManageRoute,
  EventsHomeMatchesRoute: EventsHomeMatchesRoute,
  EventsHomeTeamsRoute: EventsHomeTeamsRoute,
  EventsHomeIndexRoute: EventsHomeIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/privacy",
        "/settings",
        "/events/deleted",
        "/events/devtools",
        "/events/division",
        "/events/skills",
        "/events/summary",
        "/events/team",
        "/events/",
        "/events/dialogs/match",
        "/events/dialogs/new",
        "/events/dialogs/team",
        "/events/home/manage",
        "/events/home/matches",
        "/events/home/teams",
        "/events/home/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/privacy": {
      "filePath": "privacy.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/events/deleted": {
      "filePath": "events/deleted.tsx"
    },
    "/events/devtools": {
      "filePath": "events/devtools.tsx"
    },
    "/events/division": {
      "filePath": "events/division.tsx"
    },
    "/events/skills": {
      "filePath": "events/skills.tsx"
    },
    "/events/summary": {
      "filePath": "events/summary.tsx"
    },
    "/events/team": {
      "filePath": "events/team.tsx"
    },
    "/events/": {
      "filePath": "events/index.tsx"
    },
    "/events/dialogs/match": {
      "filePath": "events/dialogs/match.tsx"
    },
    "/events/dialogs/new": {
      "filePath": "events/dialogs/new.tsx"
    },
    "/events/dialogs/team": {
      "filePath": "events/dialogs/team.tsx"
    },
    "/events/home/manage": {
      "filePath": "events/home/manage.tsx"
    },
    "/events/home/matches": {
      "filePath": "events/home/matches.tsx"
    },
    "/events/home/teams": {
      "filePath": "events/home/teams.tsx"
    },
    "/events/home/": {
      "filePath": "events/home/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
