/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/internal/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Endpoint for checking if clients have the latest database. */
        get: operations["getInternalUpdate"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/qnas/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the Q&A with the given ID */
        get: operations["getApiQnasById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/qnas/from-author": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the Q&A with the given ID */
        get: operations["getApiQnasFrom-author"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/qnas/recent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the Q&A with the given ID */
        get: operations["getApiQnasRecent"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/rules/{rule}/qnas": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get all Q&As tagged with a specific rule */
        get: operations["getApiRulesByRuleQnas"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getInternalUpdate: {
        parameters: {
            query: {
                version: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        outdated: boolean;
                        questions?: {
                            answer: string | null;
                            answerRaw: string | null;
                            answered: boolean;
                            answeredTimestamp: string | null;
                            answeredTimestampMs: number | null;
                            askedTimestamp: string;
                            askedTimestampMs: number;
                            author: string;
                            id: string;
                            program: string;
                            question: string;
                            questionRaw: string;
                            season: string;
                            tags: string[];
                            title: string;
                            url: string;
                        }[];
                        version?: string;
                    };
                };
            };
            /** @description Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getApiQnasById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        answered: boolean;
                        answeredTimestamp: string | null;
                        answeredTimestampMs: number | null;
                        askedTimestamp: string;
                        askedTimestampMs: number;
                        author: string;
                        id: string;
                        program: string;
                        season: string;
                        tags: string[];
                        title: string;
                        url: string;
                    };
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "getApiQnasFrom-author": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        answered: boolean;
                        answeredTimestamp: string | null;
                        answeredTimestampMs: number | null;
                        askedTimestamp: string;
                        askedTimestampMs: number;
                        author: string;
                        id: string;
                        program: string;
                        season: string;
                        tags: string[];
                        title: string;
                        url: string;
                    }[];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getApiQnasRecent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        answered: boolean;
                        answeredTimestamp: string | null;
                        answeredTimestampMs: number | null;
                        askedTimestamp: string;
                        askedTimestampMs: number;
                        author: string;
                        id: string;
                        program: string;
                        season: string;
                        tags: string[];
                        title: string;
                        url: string;
                    }[];
                };
            };
            /** @description Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getApiRulesByRuleQnas: {
        parameters: {
            query?: {
                season?: string;
            };
            header?: never;
            path: {
                rule: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        answered: boolean;
                        answeredTimestamp: string | null;
                        answeredTimestampMs: number | null;
                        askedTimestamp: string;
                        askedTimestampMs: number;
                        author: string;
                        id: string;
                        program: string;
                        season: string;
                        tags: string[];
                        title: string;
                        url: string;
                    }[];
                };
            };
            /** @description Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
